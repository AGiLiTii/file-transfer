/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.Color;
import java.io.File;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.math.BigInteger;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.util.HashMap;
import java.util.Scanner;
import javax.swing.Timer;

/**
 *
 * @author louis
 */
public class Sender extends javax.swing.JFrame {

    static final String reset = "\u001B[0m";
    static final String green = "\u001B[32m";
    static final String red = "\u001B[31m";
    static final String yellow = "\u001B[33m";

    public File selectedFile;

    /**
     * Creates new form Sender
     */
    public Sender() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        mainButton = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setFocusable(false);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(31, 33, 37));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setFocusable(false);
        jPanel1.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(210, 175, 255));
        jLabel1.setText("Port:");
        jLabel1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(210, 175, 255));
        jLabel2.setText("IP:");

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jTextField2.setBackground(new java.awt.Color(102, 102, 102));
        jTextField2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(204, 204, 204));
        jTextField2.setBorder(null);
        jTextField2.setMargin(new java.awt.Insets(10, -5, 10, 20));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 335,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jTextField1.setBackground(new java.awt.Color(102, 102, 102));
        jTextField1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 337,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE));

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(210, 175, 255));
        jLabel5.setText("Protocol:");

        jComboBox1.setBackground(new java.awt.Color(32, 33, 37));
        jComboBox1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(102, 102, 102));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TCP", "RBUDP" }));
        jComboBox1.setBorder(null);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));

        jTextField3.setBackground(new java.awt.Color(102, 102, 102));
        jTextField3.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(204, 204, 204));
        jTextField3.setText("File path ...");
        jTextField3.setToolTipText("");
        jTextField3.setBorder(null);
        jTextField3.setFocusable(false);
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 334,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)));

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(210, 175, 255)));
        jPanel4.setForeground(new java.awt.Color(102, 102, 102));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel4MouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel4MouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(210, 175, 255));
        jLabel6.setText("Browse");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addContainerGap()));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        mainButton.setBackground(new java.awt.Color(102, 102, 102));
        mainButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(210, 175, 255)));
        mainButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                mainButtonMouseExited(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(210, 175, 255));
        jLabel7.setText("Send File");

        javax.swing.GroupLayout mainButtonLayout = new javax.swing.GroupLayout(mainButton);
        mainButton.setLayout(mainButtonLayout);
        mainButtonLayout.setHorizontalGroup(
                mainButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainButtonLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel7)
                                .addContainerGap(23, Short.MAX_VALUE)));
        mainButtonLayout.setVerticalGroup(
                mainButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainButtonLayout.createSequentialGroup()
                                .addContainerGap(29, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(28, 28, 28)));

        jPanel7.setBackground(new java.awt.Color(210, 175, 255));

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 3, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(31, 33, 37));
        jLabel3.setText("tsTransfer");

        jLabel4.setForeground(new java.awt.Color(31, 33, 37));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo_black.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 328,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(19, Short.MAX_VALUE)));

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(210, 175, 255));
        jLabel8.setText("File: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel8))
                                .addGap(101, 101, 101)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addContainerGap(51, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(mainButton,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel1Layout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.TRAILING,
                                                                        false)
                                                                .addComponent(jPanel3,
                                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 0,
                                                                        Short.MAX_VALUE)
                                                                .addComponent(jPanel2,
                                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jComboBox1,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE)))));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jComboBox1,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63,
                                        Short.MAX_VALUE)
                                .addComponent(mainButton, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        // jTextField3.setText("");
    }// GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextField3FocusGained
        // TODO add your handling code here:
        jTextField3.setText("");
    }// GEN-LAST:event_jTextField3FocusGained

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

    }// GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:

    }// GEN-LAST:event_jTextField2ActionPerformed

    private void jPanel4MouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jPanel4MouseEntered
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(210, 175, 255));
        jLabel6.setForeground(new Color(31, 33, 37));
    }// GEN-LAST:event_jPanel4MouseEntered

    private void jPanel4MouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jPanel4MouseExited
        // TODO add your handling code here:
        jLabel6.setForeground(new Color(210, 175, 255));
        jPanel4.setBackground(new Color(102, 102, 102));

    }// GEN-LAST:event_jPanel4MouseExited

    private void mainButtonMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_mainButtonMouseEntered
        // TODO add your handling code here:
        mainButton.setBackground(new Color(210, 175, 255));
        jLabel7.setForeground(new Color(31, 33, 37));
    }// GEN-LAST:event_mainButtonMouseEntered

    private void mainButtonMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_mainButtonMouseExited
        // TODO add your handling code here:
        jLabel7.setForeground(new Color(210, 175, 255));
        mainButton.setBackground(new Color(102, 102, 102));
    }// GEN-LAST:event_mainButtonMouseExited

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jPanel4MouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            jTextField3.setText(selectedFile.getAbsolutePath());
        }
    }// GEN-LAST:event_jPanel4MouseClicked

    private void mainButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_mainButtonMouseClicked

        System.out.println(green + "[+] Sender started" + reset);

        // connect to server with TCP
        // String IP = "localhost";
        String IP = jTextField2.getText();
        String port = jTextField1.getText();
        Socket socketTCP = new Socket();

        try {
            System.out.println(yellow + "[-] Connecting to the receiver ... " + reset);
            socketTCP = new Socket(IP, Integer.parseInt(port));
            System.out.println(green + "[+] Connected to Receiver!" + reset);
        } catch (Exception e) {
            // e.printStackTrace();
            System.out
                    .println(red + "[!] TCP socket could not connect to receiver (check if server is running)" + reset);
            JOptionPane.showMessageDialog(this, "Invalid IP / Port !", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get file to send
        // Scanner scan = new Scanner(System.in);
        String fileName = jTextField3.getText();

        File file = new File(fileName);
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "Please select a valid file !", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(red + "[!] File does not exist!" + reset);
            return;
        }

        // Get protocol to send with and use function
        String protocol = (String) jComboBox1.getSelectedItem();

        try {

            ObjectOutputStream out = new ObjectOutputStream(socketTCP.getOutputStream());
            ObjectInputStream in = new ObjectInputStream(socketTCP.getInputStream());

            // Send info with TCP
            if (protocol.equals("TCP")) {
                System.out.println(green + "[+] Sending " + fileName + " over TCP ..." + reset);

                // Send info with TCP
                Packet info = new Packet(fileName, protocol, 0, 0);
                out.writeObject(info);

                // Call TCP
                try {
                    sendTCP(file, out);
                    JOptionPane.showMessageDialog(this, "Successfully sent file over TCP!", "Success",
                            JOptionPane.PLAIN_MESSAGE);
                } catch (Exception e) {
                }

            } // Send info with RBUDP
            else if (protocol.equals("RBUDP")) {

                System.out.println(green + "[+] Sending " + fileName + " over RBUDP ..." + reset);

                // Send info with TCP
                Packet info = new Packet(fileName, protocol, 0, file.length());
                out.writeObject(info);

                // Call RBUDP
                try {
                    sendUDP(file, out, in, IP);
                    JOptionPane.showMessageDialog(this, "Successfully sent file over RBUDP!", "Success",
                            JOptionPane.PLAIN_MESSAGE);
                } catch (Exception e) {
                }
            }

            in.close();
            out.close();

        } catch (IOException e) {
            e.printStackTrace();
            System.out.println(red + "[!] ObjectOutputStream failed." + reset);
        }

        // FIXME: Ons will die socket close sodat ons multple files kan stuur. elke keer
        // wat ons op send file click will ons weer connect en stuur , receiver moet
        // altyd oop bly
        try {
            socketTCP.close();
        } catch (Exception e) {
        }
    }// GEN-LAST:event_mainButtonMouseClicked

    public static void sendTCP(File file, ObjectOutputStream out) throws Exception {
        FileInputStream inputStream = new FileInputStream(file);
        out.writeObject(inputStream.readAllBytes());
        System.out.println(green + "[+] Successfully sent the file over TCP." + reset);
        inputStream.close();
    }

    public static void sendUDP(File file, ObjectOutputStream out, ObjectInputStream in, String IP) throws Exception {

        // Create sockets for sending packets
        DatagramSocket socketUDP = new DatagramSocket();

        // Create FileInputStream for reading file into buffer
        FileInputStream inputStream = new FileInputStream(file);
        System.out.println("FILE SIZE: " + file.length());
        HashMap<Integer, DatagramPacket> seqAndPackets = new HashMap<Integer, DatagramPacket>();

        // Choose packet size
        long fileLength = file.length();
        int packetSize = 1024;

        // Check if file length < 1024
        if (fileLength < packetSize) {
            System.out.println(red + "[!] file is smaller than packet size" + reset);
        }

        int sequenceNumber = 0;
        byte buffer[] = new byte[packetSize];
        boolean lastPacketSent = false;
        String sentPackets = "";
        int leftOverBytes;

        // Start reading in file bytes to send
        while ((leftOverBytes = inputStream.available()) > 0) {

            inputStream.read(buffer);

            // check for last packet
            if (leftOverBytes < 1024) {

                // last packet with left over bytes
                byte bufferLastWithHeader[] = new byte[packetSize + 3];
                System.arraycopy(buffer, 0, bufferLastWithHeader, 3, packetSize);
                byte seqByte = (byte) sequenceNumber;
                bufferLastWithHeader[0] = seqByte;
                bufferLastWithHeader[1] = (byte) ((int) (leftOverBytes / 255));
                bufferLastWithHeader[2] = (byte) (leftOverBytes % 255);
                System.out.println("PACKET SIZE SPECIAL: " + leftOverBytes);

                // Create and send packet with header
                DatagramPacket datagramPacket = new DatagramPacket(bufferLastWithHeader, packetSize + 3,
                        InetAddress.getByName(IP),
                        2560);
                socketUDP.send(datagramPacket);
                System.out.println(yellow + "[+] Sending LAST packet " + sequenceNumber + reset);

                // Add sequence number and datagramPacket to hashmap
                seqAndPackets.put(sequenceNumber, datagramPacket);

                lastPacketSent = true;

            } else {

                // normal packet with packetSize
                byte bufferWithHeader[] = new byte[packetSize + 3];
                System.arraycopy(buffer, 0, bufferWithHeader, 3, packetSize);
                byte seqByte = (byte) sequenceNumber;
                bufferWithHeader[0] = seqByte;
                bufferWithHeader[1] = (byte) ((int) (packetSize / 255));
                bufferWithHeader[2] = (byte) (packetSize % 255);
                System.out.println("PACKET SIZE: " + packetSize);

                // Create and send packet with header
                DatagramPacket datagramPacket = new DatagramPacket(bufferWithHeader, packetSize + 3,
                InetAddress.getByName(IP),
                        2560);
                socketUDP.send(datagramPacket);
                System.out.println(yellow + "[+] Sending packet " + sequenceNumber + reset);

                // Add sequence number and datagramPacket to hashmap
                seqAndPackets.put(sequenceNumber, datagramPacket);
            }

            sequenceNumber++;

            // Notify receiver 10 packets was sent
            if (sequenceNumber == 10 || lastPacketSent == true) {

                sentPackets = sequenceNumber + "";

                out.writeObject(sentPackets);
                System.out.println(yellow + "[+] SENT SIGNAL OF SENT PACKETS" + reset);
                pause();

                // resend lost packets
                sendLostPackets(seqAndPackets, in, socketUDP, out);

                sequenceNumber = 0;
            }
        }

        out.writeObject("DONE");
        System.out.println(green + "[+] DONE" + reset);
        inputStream.close();
        System.out.println(green + "[+] Successfully sent the file over UDP!" + reset);
    }

    public static void sendLostPackets(HashMap<Integer, DatagramPacket> seqAndPackets, ObjectInputStream in,
            DatagramSocket socket, ObjectOutputStream out) throws Exception {

        String lostPackets;
        DatagramPacket packet;

        // receive lost packets from receiver
        lostPackets = (String) in.readObject();

        // check if no packets lost
        if (lostPackets.equals("")) {
            System.out.println(green + "[+] All lost packets sent!" + reset);
            return;
        }

        for (int i = 0; i < lostPackets.length(); i++) {
            System.out.println(yellow + "[+] Sending missing packet " + lostPackets.charAt(i) + reset);
            packet = seqAndPackets.get(Integer.parseInt(Character.toString(lostPackets.charAt(i))));
            socket.send(packet);
        }

        // send SENT signal
        out.writeObject(lostPackets.length() + "");
        System.out.println(yellow + "[+] SENT" + reset);
        pause();

        sendLostPackets(seqAndPackets, in, socket, out);
    }

    public static void pause() {
        Long pastTime = System.nanoTime();
        BigInteger preferedTime = new BigInteger("1000000000");
        while (System.nanoTime() - pastTime < preferedTime.longValue()) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sender().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel mainButton;
    // End of variables declaration//GEN-END:variables
}
